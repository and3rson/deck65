FEATURES {
    STARTADDRESS: default = $1000;
}
MEMORY {
	ZP:       start = $0000, size = $0100;
	# STACK:    start = $0100, size = $0100;
    RAM:      start = $0200, size = $7E00;
    PROGRAM:  start = $1000, size = $6000;
    # STACK:    start = $7000, size = $1000;
    LOROM:    start = $8000, size = $4000, file = "";
    N_C:      start = $C000, size = $1000, file = "";
    IO:       start = $D000, size = $1000, file = "";
	HIROM:    start = $E000, size = $1FF0, file = "";
	VECTORS:  start = $FFF0, size = $0010, file = "";
}

SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    CODE:     load = PROGRAM,  type = ro;
    RODATA:   load = PROGRAM,  type = ro;
    DATA:     load = PROGRAM,  type = rw;
    BSS:      load = PROGRAM,  type = bss, define = yes;
    ONCE:     load = PROGRAM,  type = ro, optional = yes;
    RAM:      load = RAM,      type = bss;
    # PROGRAM:  load = PROGRAM,  type = ro;
    IO:       load = IO,       type = bss, align=$100;
    SYSTEM:   load = LOROM,    type = ro,  align=$100;
    KORE:     load = HIROM,    type = ro,  align=$100;
	VECTORS:  load = VECTORS,  type = ro;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
